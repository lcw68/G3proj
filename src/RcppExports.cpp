// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SSVS_Logistic
Rcpp::List SSVS_Logistic(arma::vec& Y0, arma::mat& X0, arma::vec& propSD0, double& c0, double& tau0, int nMC, int nBI, int thin, int seed);
RcppExport SEXP _G3proj_SSVS_Logistic(SEXP Y0SEXP, SEXP X0SEXP, SEXP propSD0SEXP, SEXP c0SEXP, SEXP tau0SEXP, SEXP nMCSEXP, SEXP nBISEXP, SEXP thinSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type Y0(Y0SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type propSD0(propSD0SEXP);
    Rcpp::traits::input_parameter< double& >::type c0(c0SEXP);
    Rcpp::traits::input_parameter< double& >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< int >::type nMC(nMCSEXP);
    Rcpp::traits::input_parameter< int >::type nBI(nBISEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(SSVS_Logistic(Y0, X0, propSD0, c0, tau0, nMC, nBI, thin, seed));
    return rcpp_result_gen;
END_RCPP
}
// SSVS_Tuning
Rcpp::List SSVS_Tuning(arma::vec& Y0, arma::mat& X0, double& c0, double& tau0, int nMC, int b, int seed);
RcppExport SEXP _G3proj_SSVS_Tuning(SEXP Y0SEXP, SEXP X0SEXP, SEXP c0SEXP, SEXP tau0SEXP, SEXP nMCSEXP, SEXP bSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type Y0(Y0SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< double& >::type c0(c0SEXP);
    Rcpp::traits::input_parameter< double& >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< int >::type nMC(nMCSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(SSVS_Tuning(Y0, X0, c0, tau0, nMC, b, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_G3proj_SSVS_Logistic", (DL_FUNC) &_G3proj_SSVS_Logistic, 9},
    {"_G3proj_SSVS_Tuning", (DL_FUNC) &_G3proj_SSVS_Tuning, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_G3proj(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

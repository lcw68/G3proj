library(G3proj)
library(devtools)
test()
test()
library(G3proj)
?G3proj::predict_BLRM
set.seed(1);
N  = 1000;
p  = 10;
X.test    = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta       = X.test %*% beta_true
pi        = exp(eta) / (1 + exp(eta))
Y.test    = rbinom(N,1,pi)
## simulate MCMC beta samples (beta_true + N(0, 0.5) random errors)
M = 1000
MCsamples = matrix(data = rep(beta_true, M), nrow = M, ncol = p, byrow = T) + matrix(data = rnorm(M*p, sd = 0.5), nrow=M, ncol=p)
## predict based on MCMC beta samples
prediction = predict_BLRM(Y, X, blrm$beta.samples)
## Classification Metrics with cutoff = 0.5
caret::confusionMatrix(data = factor(prediction$data), reference = factor(ifelse(prediction$pred.prob > 0.5, 1, 0)), positive = "1")
?G3proj::soft_thresh
set.seed(1)
x <- rnorm(5)
b <- 0.2
soft_thresh(x,b)
?G3proj::SSVS.Logistic
set.seed(1);
N  = 100;
p  = 10;
X  = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta = X %*% beta_true
pi = exp(eta) / (1 + exp(eta))
Y  = rbinom(N,1,pi)
## fit model;
test1 <- G3proj::SSVS.Logistic(Y0 = Y, X0 = X, propSD0, c0 = 10,
tau0 = 0.4, nMC = 1000, nBI = 100, thin=1, seed=1)
library(G3proj)
set.seed(1);
N  = 100;
p  = 10;
X  = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta = X %*% beta_true
pi = exp(eta) / (1 + exp(eta))
Y  = rbinom(N,1,pi)
## fit model;
test1 <- G3proj::SSVS.Logistic(Y0 = Y, X0 = X, propSD0, c0 = 10,
tau0 = 0.4, nMC = 1000, nBI = 100, thin=1, seed=1)
G3proj::SSVS.Logistic()
?G3proj::SSVS.Logistic()
set.seed(1)
N  = 100
p  = 10
X  = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta = X %*% beta_true
pi = exp(eta) / (1 + exp(eta))
Y  = rbinom(N,1,pi)
propSD0 = rep(.5,p)
## fit model;
test1 <- G3proj::SSVS.Logistic(Y0 = Y, X0 = X, propSD0, c0 = 10,
tau0 = 0.4, nMC = 1000, nBI = 100, thin=1, seed=1)
library(G3proj)
set.seed(1)
N  = 100
p  = 10
X  = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta = X %*% beta_true
pi = exp(eta) / (1 + exp(eta))
Y  = rbinom(N,1,pi)
propSD0 = rep(.5,p)
## fit model;
test1 <- G3proj::SSVS.Logistic(Y0 = Y, X0 = X, propSD0, c0 = 10,
tau0 = 0.4, nMC = 1000, nBI = 100, thin=1, seed=1)
?G3proj
??G3proj
library(G3proj)
?G3proj::SSVS.Logistic
set.seed(1)
N  = 100
p  = 10
X  = matrix(data = rnorm(N*p), nrow=N, ncol=p)
beta_true = c(rep(1,p/2),rep(0,p/2))
eta = X %*% beta_true
pi = exp(eta) / (1 + exp(eta))
Y  = rbinom(N,1,pi)
propSD0 = rep(.5,p)
## fit model;
test1 <- G3proj::SSVS.Logistic(Y0 = Y, X0 = X, propSD0, c0 = 10,
tau0 = 0.4, nMC = 1000, nBI = 100, thin=1, seed=1)
?G3proj::predict.glmlasso
set.seed(1232)
Nz = 500
pz = 10
Xz = scale(matrix(rnorm(Nz*pz), ncol=pz))
bz = c(.5, -.5, .25, -.25, .125, -.125, rep(0, pz-6))
yz = rbinom(Nz,1,exp(Xz %*% bz)/(1+exp(Xz %*% bz)))
lambda = .1
fit1 <- glmlasso(Xz,yz,lambda,tol=1e-12)
pred <- predict.glmlasso(fit1,newdata = Xz)
